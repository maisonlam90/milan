-- ============================================================
-- üí≥ LOAN MODULE ‚Äî RESET & CREATE (clean rebuild)
-- ============================================================

-- 0) Extensions & timezone

SET TIME ZONE 'UTC';

-- ------------------------------------------------------------
-- 2) H·ª¢P ƒê·ªíNG VAY (loan_contract)
-- ------------------------------------------------------------
CREATE TABLE loan_contract (
    tenant_id UUID NOT NULL,                                   -- üîë shard key
    id        UUID NOT NULL DEFAULT gen_random_uuid(),         -- üîë id h·ª£p ƒë·ªìng
    contact_id UUID NOT NULL,                                  -- KH/ƒë·ªëi t√°c (kh·ªõp code: contact_id)

    name            TEXT NOT NULL,                             -- S·ªë/t√™n h·ª£p ƒë·ªìng
    principal       BIGINT NOT NULL,                           -- S·ªë ti·ªÅn vay ban ƒë·∫ßu (ƒë∆°n v·ªã nh·ªè nh·∫•t)
    interest_rate   DOUBLE PRECISION NOT NULL,                 -- L√£i su·∫•t %/nƒÉm (vd: 0.18 = 18%)
    term_months     INT NOT NULL,                              -- K·ª≥ h·∫°n (th√°ng)

    date_start      TIMESTAMPTZ NOT NULL,                      -- Ng√†y b·∫Øt ƒë·∫ßu vay
    date_end        TIMESTAMPTZ,                               -- Ng√†y k·∫øt th√∫c (nullable)

    collateral_description TEXT,                               -- M√¥ t·∫£ t√†i s·∫£n th·∫ø ch·∫•p
    collateral_value       BIGINT NOT NULL DEFAULT 0,          -- Gi√° tr·ªã t√†i s·∫£n
    storage_fee_rate       DOUBLE PRECISION NOT NULL DEFAULT 0,-- % ph√≠ l∆∞u kho/ng√†y
    storage_fee            BIGINT NOT NULL DEFAULT 0,          -- T·ªïng ph√≠ l∆∞u kho

    current_principal       BIGINT NOT NULL DEFAULT 0,         -- S·ªë d∆∞ g·ªëc hi·ªán t·∫°i
    current_interest        BIGINT NOT NULL DEFAULT 0,         -- L√£i ch∆∞a thu
    accumulated_interest    BIGINT NOT NULL DEFAULT 0,         -- L√£i t√≠ch l≈©y
    total_paid_interest     BIGINT NOT NULL DEFAULT 0,         -- T·ªïng l√£i ƒë√£ tr·∫£
    total_settlement_amount BIGINT NOT NULL DEFAULT 0,         -- T·ªïng t·∫•t to√°n

    state       TEXT NOT NULL DEFAULT 'draft',                 -- draft/active/paid/default
    created_at  TIMESTAMPTZ NOT NULL DEFAULT now(),
    updated_at  TIMESTAMPTZ NOT NULL DEFAULT now(),

    PRIMARY KEY (tenant_id, id)                                -- ‚úÖ shard by tenant_id
);

-- Index t·ªëi ∆∞u
CREATE INDEX idx_loan_contract_tenant          ON loan_contract (tenant_id);
CREATE INDEX idx_loan_contract_tenant_state    ON loan_contract (tenant_id, state);
CREATE INDEX idx_loan_contract_tenant_contact  ON loan_contract (tenant_id, contact_id);
CREATE INDEX idx_loan_contract_tenant_dates    ON loan_contract (tenant_id, date_start, date_end);

-- Trigger updated_at
CREATE OR REPLACE FUNCTION trg_loan_contract_set_updated_at()
RETURNS trigger LANGUAGE plpgsql AS $$
BEGIN
  NEW.updated_at := now();
  RETURN NEW;
END $$;

CREATE TRIGGER loan_contract_set_updated_at
BEFORE UPDATE ON loan_contract
FOR EACH ROW
EXECUTE FUNCTION trg_loan_contract_set_updated_at();

-- ------------------------------------------------------------
-- 3) GIAO D·ªäCH H·ª¢P ƒê·ªíNG (loan_transaction)
-- ------------------------------------------------------------
CREATE TABLE loan_transaction (
    tenant_id   UUID NOT NULL,                                  -- üîë shard key
    id          UUID NOT NULL DEFAULT gen_random_uuid(),        -- üîë id giao d·ªãch
    contract_id UUID NOT NULL,                                  -- id h·ª£p ƒë·ªìng
    contact_id  UUID NOT NULL,                                  -- KH/ƒë·ªëi t√°c

    transaction_type TEXT NOT NULL CHECK (
      transaction_type IN (
        'disbursement','interest','principal',
        'additional','liquidation','settlement'
      )
    ),

    amount BIGINT NOT NULL,                                     -- S·ªë ti·ªÅn (+/-)
    "date" TIMESTAMPTZ NOT NULL,                                -- Ng√†y giao d·ªãch (ƒë·∫∑t trong "" ƒë·ªÉ tr√°nh nh·∫ßm l·∫´n t·ª´ kh√≥a)
    note   TEXT,

    days_from_prev        INT    NOT NULL DEFAULT 0,            -- S·ªë ng√†y t√≠nh l√£i
    interest_for_period   BIGINT NOT NULL DEFAULT 0,            -- L√£i k·ª≥ n√†y
    accumulated_interest  BIGINT NOT NULL DEFAULT 0,            -- L√£i l≈©y k·∫ø sau giao d·ªãch
    principal_balance     BIGINT NOT NULL DEFAULT 0,            -- D∆∞ n·ª£ g·ªëc sau giao d·ªãch

    created_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT now(),

    PRIMARY KEY (tenant_id, id),

    -- ‚úÖ FK composite ƒë√∫ng chu·∫©n sharding, tr√°nh cross-tenant
    CONSTRAINT fk_loan_tx_contract
      FOREIGN KEY (tenant_id, contract_id)
      REFERENCES loan_contract (tenant_id, id)
      ON DELETE CASCADE
);

-- Index t·ªëi ∆∞u
CREATE INDEX idx_loan_tx_tenant           ON loan_transaction (tenant_id);
CREATE INDEX idx_loan_tx_tenant_contract  ON loan_transaction (tenant_id, contract_id);
CREATE INDEX idx_loan_tx_tenant_contact   ON loan_transaction (tenant_id, contact_id);

-- Trigger updated_at
CREATE OR REPLACE FUNCTION trg_loan_transaction_set_updated_at()
RETURNS trigger LANGUAGE plpgsql AS $$
BEGIN
  NEW.updated_at := now();
  RETURN NEW;
END $$;

CREATE TRIGGER loan_transaction_set_updated_at
BEFORE UPDATE ON loan_transaction
FOR EACH ROW
EXECUTE FUNCTION trg_loan_transaction_set_updated_at();
