use axum::{Router, routing::{get, post}, middleware};
use std::sync::Arc;

use axum::routing::delete; // ğŸ‘ˆ Ä‘á»ƒ dÃ¹ng delete()
use crate::core::{state::AppState, auth::jwt_auth};
use crate::module::loan::handler;

pub fn routes() -> Router<Arc<AppState>> {
    Router::new()
        // âœ… Metadata public, khÃ´ng cáº§n token
        .route("/loan/metadata", get(handler::get_metadata))
        .nest(
            "/loan",
            Router::new()
                .route("/create", post(handler::create_contract))
                .route("/list", get(handler::list_contracts))
                .route("/:id", get(handler::get_contract_by_id))       // láº¥y chi tiáº¿t
                .route("/:id/update", post(handler::update_contract))  // cáº­p nháº­t
                .route("/:id", delete(handler::delete_contract))       // âœ… XoÃ¡ há»£p Ä‘á»“ng
                .layer(middleware::from_fn(jwt_auth)),           // Táº¥t cáº£ require JWT
        )
}
