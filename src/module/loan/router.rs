use axum::{Router, routing::{get, post}, middleware};
use std::sync::Arc;

use axum::routing::delete; // ðŸ‘ˆ Ä‘á»ƒ dÃ¹ng delete()
use crate::core::{state::AppState, auth::jwt_auth};
use crate::module::loan::handler;

pub fn routes() -> Router<Arc<AppState>> {
    Router::new()
        // âœ… Metadata public, khÃ´ng cáº§n token
        .route("/loan/metadata", get(handler::get_metadata))
        .nest(
            "/loan",
            Router::new()
                .route("/create", post(handler::create_contract))
                .route("/list", get(handler::list_contracts))
                .route("/:id", get(handler::get_contract_by_id))       // láº¥y chi tiáº¿t
                .route("/:id/update", post(handler::update_contract))  // cáº­p nháº­t
                .route("/:id", delete(handler::delete_contract))       // âœ… XoÃ¡ há»£p Ä‘á»“ng
                .route("/stats", get(handler::get_loan_stats))         //bao cao
                       .route("/monthly-interest", get(handler::get_monthly_interest_income)) // lÃ£i thÃ¡ng
                       .route("/dashboard-stats", get(handler::get_dashboard_stats)) // 6 Ã´ dashboard
                       .route("/portfolio-quality", get(handler::get_loan_portfolio_quality)) // cháº¥t lÆ°á»£ng danh má»¥c
                       .route("/contract-status", get(handler::get_contract_status)) // tráº¡ng thÃ¡i há»£p Ä‘á»“ng
                       .route("/top-contracts", get(handler::get_top_contracts)) // top há»£p Ä‘á»“ng cÃ³ lá»£i nhuáº­n cao nháº¥t
                       .route("/activity-report", get(handler::get_loan_activity_report)) // bÃ¡o cÃ¡o hoáº¡t Ä‘á»™ng cho vay
                       .route("/recent-activities", get(handler::get_recent_activities)) // hoáº¡t Ä‘á»™ng gáº§n Ä‘Ã¢y
                .nest("/report", Router::new()
                    .route("/", get(handler::get_loan_report)) // âœ… API load bÃ¡o cÃ¡o pivot
                    .route("/pivot-now", post(handler::pivot_now_all_contracts)) // âœ… TÃ­nh táº¥t cáº£
                    .route("/:id/pivot-now", post(handler::pivot_now_contract))  // âœ… TÃ­nh 1 há»£p Ä‘á»“ng
                )
                // âœ… CÃ¡c route tÃ i sáº£n tháº¿ cháº¥p theo há»£p Ä‘á»“ng
                .route("/:id/collaterals", get(handler::get_collaterals_by_contract))
                .route("/:id/collaterals/add", post(handler::add_collateral_to_contract))
                .route("/:id/collaterals/release", post(handler::release_collateral_from_contract))

                // âœ… Táº¡o/gá»™p trá»±c tiáº¿p tÃ i sáº£n
                .route("/collateral", post(handler::create_collateral))
                .route("/collateral", get(handler::list_collateral))
                .route("/collateral/:asset_id", post(handler::update_collateral))
                .layer(middleware::from_fn(jwt_auth)),           // Táº¥t cáº£ require JWT
        )
}
