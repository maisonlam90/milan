name: Build and Push to GHCR

on:
  push:
    branches: ["main"]

jobs:
  push-ghcr:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'
          cache-dependency-path: |
            src/frontend/demo/yarn.lock
            yarn.lock

      # .env cho BE (đúng key=value)
      - name: Create .env for backend
        run: |
          cat <<'EOF' > .env
          DATABASE_URL=${{ secrets.DATABASE_URL }}
          EOF

      # giải mã cert (nếu dùng SSL)
      - name: Decode yugabyte.crt from secret
        if: ${{ secrets.YUGA_CRT_B64 != '' }}
        run: |
          echo "${{ secrets.YUGA_CRT_B64 }}" | base64 -d > yugabyte.crt
          ls -l yugabyte.crt

      # Build FE một lần, nhúng URL BE (chọn public URL ổn định)
      - name: Build frontend (Vite)
        working-directory: src/frontend/demo
        run: |
          yarn install --frozen-lockfile
          VITE_BACKEND_URL='${{ secrets.VITE_BACKEND_URL }}' yarn build

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image to GHCR
        run: |
          IMAGE_NAME=ghcr.io/${{ github.repository_owner }}/axum:latest
          # Nếu Dockerfile copy FE dist từ src/frontend/demo/dist
          docker build \
            --build-arg SQLX_OFFLINE=true \
            -t $IMAGE_NAME .
          docker push $IMAGE_NAME
